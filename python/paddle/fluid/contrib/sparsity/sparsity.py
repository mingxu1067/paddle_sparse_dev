from __future__ import print_function
import math

__all__ = ['check_matrix_property', 'prune_matrix']

def check_matrix_property(x):
    len_x = len(x)
    if len_x % 4 != 0:
        raise ValueError("Weight number for sparsity pruning should be multiplier of 4, "
                         "but got {}".format(len_x))

def prune_matrix(x):
    check_matrix_property(x)

    for i in range(0, len(x), 4):
        min_1 = math.inf
        min_1_idx = 0
        min_2 = math.inf
        min_2_idx = 0
        for j in range(4):
            idx = i+j
            val = abs(x[idx])
            if val <= min_1:
                min_2 = min_1
                min_2_idx = min_1_idx
                min_1 = val
                min_1_idx = idx
            elif val <= min_2:
                min_2 = val
                min_2_idx = idx
        x[min_1_idx] = 0
        x[min_2_idx] = 0
    return x

if __name__ == "__main__":

    x = [3.00, 6.00, 7.00, 5.00, 3.00, 5.00, 6.00, 2.00, 9.00, 1.00, 2.00, 7.00, 0.00, 9.00, 3.00, 6.00, 0.00, 6.00, 2.00, 6.00, 1.00, 8.00, 7.00, 9.00, 2.00, 0.00, 2.00, 3.00, 7.00, 5.00, 9.00, 2.00, 2.00, 8.00, 9.00, 7.00, 3.00, 6.00, 1.00, 2.00, 9.00, 3.00, 1.00, 9.00, 4.00, 7.00, 8.00, 4.00, 5.00, 0.00, 3.00, 6.00, 1.00, 0.00, 6.00, 3.00, 2.00, 0.00, 6.00, 1.00, 5.00, 5.00, 4.00, 7.00, 6.00, 5.00, 6.00, 9.00, 3.00, 7.00, 4.00, 5.00, 2.00, 5.00, 4.00, 7.00, 4.00, 4.00, 3.00, 0.00, 7.00, 8.00, 6.00, 8.00, 8.00, 4.00, 3.00, 1.00, 4.00, 9.00, 2.00, 0.00, 6.00, 8.00, 9.00, 2.00, 6.00, 6.00, 4.00, 9.00, 5.00, 0.00, 4.00, 8.00, 7.00, 1.00, 7.00, 2.00, 7.00, 2.00, 2.00, 6.00, 1.00, 0.00, 6.00, 1.00, 5.00, 9.00, 4.00, 9.00, 0.00, 9.00, 1.00, 7.00, 7.00, 1.00, 1.00, 5.00, 9.00, 7.00, 7.00, 6.00, 7.00, 3.00, 6.00, 5.00, 6.00, 3.00, 9.00, 4.00, 8.00, 1.00, 2.00, 9.00, 3.00, 9.00, 0.00, 8.00, 8.00, 5.00, 0.00, 9.00, 6.00, 3.00, 8.00, 5.00, 6.00, 1.00, 1.00, 5.00, 9.00, 8.00, 4.00, 8.00, 1.00, 0.00, 3.00, 0.00, 4.00, 4.00, 4.00, 4.00, 7.00, 6.00, 3.00, 1.00, 7.00, 5.00, 9.00, 6.00, 2.00, 1.00, 7.00, 8.00, 5.00, 7.00, 4.00, 1.00, 8.00, 5.00, 9.00, 7.00, 5.00, 3.00, 8.00, 8.00, 3.00, 1.00, 8.00, 9.00, 6.00, 4.00, 3.00, 3.00, 3.00, 8.00, 6.00, 0.00, 4.00, 8.00, 8.00, 8.00, 9.00, 7.00, 7.00, 6.00, 4.00, 3.00, 0.00, 3.00, 0.00, 9.00, 2.00, 5.00, 4.00, 0.00, 5.00, 9.00, 4.00, 6.00, 9.00, 2.00, 2.00, 4.00, 7.00, 7.00, 5.00, 4.00, 8.00, 1.00, 2.00, 8.00, 9.00, 3.00, 6.00, 8.00, 0.00, 2.00, 1.00, 0.00, 5.00, 1.00, 1.00, 0.00, 8.00, 5.00]
    x_ref = [0.00, 6.00, 7.00, 0.00, 0.00, 5.00, 6.00, 0.00, 9.00, 0.00, 0.00, 7.00, 0.00, 9.00, 0.00, 6.00, 0.00, 6.00, 0.00, 6.00, 0.00, 8.00, 0.00, 9.00, 2.00, 0.00, 0.00, 3.00, 7.00, 0.00, 9.00, 0.00, 0.00, 8.00, 9.00, 0.00, 3.00, 6.00, 0.00, 0.00, 9.00, 0.00, 0.00, 9.00, 0.00, 7.00, 8.00, 0.00, 5.00, 0.00, 0.00, 6.00, 0.00, 0.00, 6.00, 3.00, 2.00, 0.00, 6.00, 0.00, 5.00, 0.00, 0.00, 7.00, 6.00, 0.00, 0.00, 9.00, 0.00, 7.00, 0.00, 5.00, 0.00, 5.00, 0.00, 7.00, 4.00, 4.00, 0.00, 0.00, 0.00, 8.00, 0.00, 8.00, 8.00, 4.00, 0.00, 0.00, 4.00, 9.00, 0.00, 0.00, 0.00, 8.00, 9.00, 0.00, 6.00, 0.00, 0.00, 9.00, 5.00, 0.00, 0.00, 8.00, 7.00, 0.00, 7.00, 0.00, 7.00, 0.00, 0.00, 6.00, 1.00, 0.00, 6.00, 0.00, 0.00, 9.00, 0.00, 9.00, 0.00, 9.00, 0.00, 7.00, 7.00, 0.00, 0.00, 5.00, 9.00, 7.00, 0.00, 0.00, 7.00, 0.00, 6.00, 0.00, 6.00, 0.00, 9.00, 0.00, 8.00, 0.00, 0.00, 9.00, 0.00, 9.00, 0.00, 8.00, 8.00, 0.00, 0.00, 9.00, 6.00, 0.00, 8.00, 0.00, 6.00, 0.00, 0.00, 5.00, 9.00, 8.00, 0.00, 0.00, 1.00, 0.00, 3.00, 0.00, 4.00, 4.00, 0.00, 0.00, 7.00, 6.00, 0.00, 0.00, 7.00, 0.00, 9.00, 0.00, 0.00, 0.00, 7.00, 8.00, 5.00, 7.00, 0.00, 0.00, 8.00, 0.00, 9.00, 0.00, 0.00, 0.00, 8.00, 8.00, 0.00, 0.00, 8.00, 9.00, 6.00, 4.00, 0.00, 0.00, 0.00, 8.00, 6.00, 0.00, 0.00, 8.00, 8.00, 0.00, 9.00, 7.00, 0.00, 0.00, 4.00, 3.00, 0.00, 0.00, 0.00, 9.00, 0.00, 5.00, 0.00, 0.00, 5.00, 9.00, 0.00, 6.00, 9.00, 0.00, 0.00, 0.00, 7.00, 7.00, 5.00, 0.00, 8.00, 0.00, 0.00, 8.00, 9.00, 0.00, 6.00, 8.00, 0.00, 0.00, 1.00, 0.00, 5.00, 0.00, 0.00, 0.00, 8.00, 5.00]
    x_pruned = prune_matrix(x)
    print(x_pruned)
    for i in range(len(x_ref)):
        if x_ref[i] != x_pruned[i]:
            print(i, "is not match. ref:", x_ref[i], "result:", x_pruned[i])

